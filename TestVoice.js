//@input Asset.VoiceMLModule vmlModule {"label": "Voice ML Module"}

var isListeningForQuery = false; // Flag to indicate if it's listening for the query

// Listening options
var options = VoiceML.ListeningOptions.create();
options.speechRecognizer = VoiceMLModule.SpeechRecognizer.Default;
options.languageCode = 'en_US'; // Set language to English
options.shouldReturnAsrTranscription = true;
options.shouldReturnInterimAsrTranscription = true;

// Keyword detection: Set "Hey, Snap" as the trigger
var keyword = "Hey, Snap";
var keywordAliases = ["hey snap", "hey, snap"];
var nlpKeywordModel = VoiceML.NlpKeywordModelOptions.create();
nlpKeywordModel.addKeywordGroup(keyword, keywordAliases);
options.nlpModels = [nlpKeywordModel];

// Callback when voice recognition is enabled
var onListeningEnabledHandler = function () {
    script.vmlModule.startListening(options);
    print("Listening for 'Hey, Snap'...");
};

// Callback when voice recognition is disabled
var onListeningDisabledHandler = function () {
    script.vmlModule.stopListening();
    print("Voice recognition stopped.");
};

// Callback to handle errors
var onListeningErrorHandler = function (eventErrorArgs) {
    print("Error: " + eventErrorArgs.error + " desc: " + eventErrorArgs.description);
};

// Callback for updating listening events (transcriptions and keyword detection)
var onUpdateListeningEventHandler = function (eventArgs) {
    if (isListeningForQuery) {
        handleQuery(eventArgs);
    } else {
        handleKeywordDetection(eventArgs);
    }
};

// Function to handle keyword detection
function handleKeywordDetection(eventArgs) {
    if (!eventArgs.isFinalTranscription) {
        return;
    }

    // Check for the keyword
    var keywordResponses = eventArgs.getKeywordResponses();
    if (keywordResponses.length > 0 && eventArgs.transcription.toLowerCase().includes("hey snap")) {
        print("Keyword 'Hey, Snap' detected. Listening for a query...");
        isListeningForQuery = true; // Now listen for the query
        script.vmlModule.startListening(options); // Continue listening for the query
    }
}

// Function to handle the query once the keyword is detected
function handleQuery(eventArgs) {
    if (!eventArgs.isFinalTranscription) {
        return;
    }

    print("Final Transcription: " + eventArgs.transcription);

    if (eventArgs.transcription.toLowerCase().includes("give me a hint")) {
        outputHint();
    }
}

// Function to output the hint
function outputHint() {
    print("Hint: The hint is going to be generated by ChatGPT...");
}

// Attach callbacks to the VoiceML Module
script.vmlModule.onListeningUpdate.add(onUpdateListeningEventHandler);
script.vmlModule.onListeningError.add(onListeningErrorHandler);
script.vmlModule.onListeningEnabled.add(onListeningEnabledHandler);
script.vmlModule.onListeningDisabled.add(onListeningDisabledHandler);

// Start listening for the "Hey, Snap" keyword
script.vmlModule.startListening(options);
